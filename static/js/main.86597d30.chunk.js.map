{"version":3,"sources":["components/Clock.module.css","components/Notes.module.css","components/Module.module.css","components/Clock.js","components/Notes.js","components/Module.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","card-face","first-card-face","bring-front","second-card-face","bring-back","card-face-front","card-face-back","time","format-container","submit-button","notes-text-area","container","container-back","type-icon","module-icon-container","module-icon","Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderDisplay","classNames","concat","styles","settingFace","react_default","a","createElement","className","state","timezone","renderSettings","onSubmit","handleSubmit","name","defaultValue","moment","tz","names","map","itemTimezone","type","value","defaultChecked","format","i","key","event","preventDefault","data","FormData","target","setState","get","toggleSettingFace","clock","locale","now","style","width","height","_this2","interval","setInterval","window","addEventListener","saveModule","clearInterval","Component","Notes","notes","onChange","handleChange","Module","deleteModule","delete","idKey","deleted","localStorage","setItem","JSON","stringify","objectSpread","setModuleType","component","console","log","React","face","cloneElement","undefined","Icon_default","id","onClick","path","mdiClock","size","mdiClipboardText","classContainer","mdiSettings","mdiDelete","App","loadModules","_loop","parse","getItem","prevState","modules","toConsumableArray","length","addModule","newKey","generateKey","idToDelete","filter","mod","removeItem","S4","Math","random","toString","substring","mdiPlus","color","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86597d30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-face\":\"Clock_card-face___kinp\",\"first-card-face\":\"Clock_first-card-face__2N6j8\",\"bring-front\":\"Clock_bring-front__22u0K\",\"second-card-face\":\"Clock_second-card-face__irrhs\",\"bring-back\":\"Clock_bring-back__31-QM\",\"card-face-front\":\"Clock_card-face-front__12hse\",\"card-face-back\":\"Clock_card-face-back__1Ipxd\",\"time\":\"Clock_time__3kQek\",\"format-container\":\"Clock_format-container__1N6_p\",\"submit-button\":\"Clock_submit-button__3Ln5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-face\":\"Notes_card-face__1uKe3\",\"first-card-face\":\"Notes_first-card-face__36ETk\",\"bring-front\":\"Notes_bring-front__Y3KkP\",\"second-card-face\":\"Notes_second-card-face__13iz0\",\"bring-back\":\"Notes_bring-back__3iYNB\",\"card-face-front\":\"Notes_card-face-front__H8HKA\",\"card-face-back\":\"Notes_card-face-back__3QoPM\",\"submit-button\":\"Notes_submit-button__1sJM5\",\"notes-text-area\":\"Notes_notes-text-area__2NR9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Module_container__wvi1j\",\"container-back\":\"Module_container-back__1YcdK\",\"type-icon\":\"Module_type-icon__NV6kC\",\"module-icon-container\":\"Module_module-icon-container__1xaPW\",\"module-icon\":\"Module_module-icon__3GDOf\"};","import React, { Component } from 'react';\n\nimport moment from 'moment-timezone';\nimport { now } from 'moment';\n\nimport 'moment/locale/fr';\nimport 'moment/locale/en-gb';\n\nimport styles from './Clock.module.css';\n\nexport default class Clock extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            timezone: props.data ? props.data.timezone : 'Europe/Paris',\n            format: props.data ? props.data.format : '12h',\n            time: null\n        };\n    }\n\n    render() {\n        return (\n            <span style={{ width: 'inherit', height: 'inherit' }}>\n                {this.renderDisplay()}\n                {this.renderSettings()}\n            </span>\n        );\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.clock(), 100);\n        window.addEventListener(\"beforeunload\", (event) => {\n            this.props.saveModule({\n                type: this.props.type,\n                data: this.state\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    renderDisplay = () => {\n        let classNames = `${styles['card-face']} ${styles['card-face-front']}`;\n        if (!this.props.settingFace) classNames += ` ${styles['first-card-face']}`;\n        else classNames += ` ${styles['second-card-face']}`;\n        return (\n            <div className={classNames}>\n                <h2>{this.state.timezone}</h2>\n                <div className={styles['time']}>{this.state.time}</div>\n            </div>\n        );\n    }\n\n    renderSettings = () => {\n        let classNames = `${styles['card-face']} ${styles['card-face-back']}`;\n        if (this.props.settingFace) classNames += ` ${styles['first-card-face']}`;\n        else classNames += ` ${styles['second-card-face']}`;\n        return (\n            <div className={classNames}>\n                <h2>Settings</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <select name=\"timezone\" defaultValue={this.state.timezone}>\n                        {moment.tz.names().map(this.itemTimezone)}\n                    </select>\n                    <div className={styles['format-container']}>\n                        <label>\n                            12h\n                                <input type=\"radio\" name=\"format\" value=\"12h\" defaultChecked={this.state.format === '12h'} />\n                        </label>\n                        <label>\n                            - 24h\n                                <input type=\"radio\" name=\"format\" value=\"24h\" defaultChecked={this.state.format === '24h'} />\n                        </label>\n                    </div>\n                    <input className={styles['submit-button']} type=\"submit\" value=\"Save\" />\n                </form>\n            </div>\n        );\n    }\n\n    itemTimezone = (timezone, i) => {\n        return <option key={i} value={timezone} >{timezone}</option>;\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n        const data = new FormData(event.target);\n        this.setState({\n            timezone: data.get('timezone'),\n            format: data.get('format')\n        });\n        this.props.toggleSettingFace(false);\n    }\n\n    clock = () => {\n        if (this.state.format === '24h')\n            moment.locale('fr');\n        else\n            moment.locale('en');\n        this.setState({ time: moment(now()).tz(this.state.timezone).format('LTS') });\n    }\n}","import React, { Component } from 'react';\n\nimport styles from './Notes.module.css'\n\nexport default class Notes extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            notes: props.data ? props.data.notes : ''\n        };\n    }\n\n    render() {\n        return (\n            <span style={{ width: 'inherit', height: 'inherit' }}>\n                {this.renderDisplay()}\n                {this.renderSettings()}\n            </span>\n        );\n    }\n\n    componentDidMount() {\n        /* Register event to save module on page close */\n        window.addEventListener(\"beforeunload\", (event) => {\n            this.props.saveModule({\n                type: this.props.type,\n                data: this.state\n            });\n        });\n    }\n\n    /**\n     * Render module page\n     */\n    renderDisplay = () => {\n        let classNames = `${styles['card-face']} ${styles['card-face-front']}`;\n        if (!this.props.settingFace) classNames += ` ${styles['first-card-face']}`;\n        else classNames += ` ${styles['second-card-face']}`;\n        return (\n            <div className={classNames}>\n                <h2>Notes</h2>\n                <textarea className={styles['notes-text-area']} value={this.state.notes} onChange={this.handleChange} />\n            </div>\n        );\n    }\n\n    /**\n     * Render module setting page\n     */\n    renderSettings = () => {\n        let classNames = `${styles['card-face']} ${styles['card-face-back']}`;\n        if (this.props.settingFace) classNames += ` ${styles['first-card-face']}`;\n        else classNames += ` ${styles['second-card-face']}`;\n        return (\n            <div className={classNames}>\n                <h2>Settings</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        A simple text area for your notes\n                    </div>\n                    <input className={styles['submit-button']} type=\"submit\" value=\"Ok\" />\n                </form>\n            </div>\n        );\n    }\n\n    /**\n     * Apply settings on state\n     */\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.toggleSettingFace(false);\n    }\n\n    handleChange = (event) => {\n        this.setState({ notes: event.target.value });\n    }\n}","import React, { Component } from 'react';\n\nimport Clock from './Clock';\nimport Notes from './Notes';\n\nimport { mdiClock, mdiSettings, mdiDelete, mdiClipboardText } from '@mdi/js'\n\nimport styles from './Module.module.css';\nimport Icon from '@mdi/react';\n\nexport default class Module extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: props.type,\n            settingFace: props.data ? false : true,\n            toggleSettingFace: this.toggleSettingFace,\n            saveModule: this.saveModule,\n            module: null\n        };\n    }\n\n    render() {\n        if (this.state.type === undefined) {\n            return (\n                <div className={styles['container']}>\n                    <Icon id=\"clock-icon\" className={styles['type-icon']} onClick={() => this.setModuleType('CLOCK')} path={mdiClock} size={1} />\n                    <Icon id=\"notes-icon\" className={styles['type-icon']} onClick={() => this.setModuleType('NOTES')} path={mdiClipboardText} size={1} />\n                </div>\n            );\n        } else {\n            let classContainer = styles['container'];\n            // if(!this.state.settingFace) classContainer += ' container-front';\n            if (this.state.settingFace) classContainer += ` ${styles['container-back']}`;\n\n            return (\n                <div className={classContainer}>\n                    {this.state.module}\n                    <div className={styles['module-icon-container']}>\n                        <Icon className={styles['module-icon']} onClick={() => this.toggleSettingFace(!this.state.settingFace)} path={mdiSettings} size={0.5} />\n                        <Icon className={styles['module-icon']} onClick={() => this.deleteModule()} path={mdiDelete} size={0.5} />\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.data) {\n            this.setState({\n                module: React.createElement(Clock, { idKey: this.props.idKey, data: this.props.data, ...this.state })\n            })\n        }\n        if (this.props.data) this.setModuleType(this.props.type);\n    }\n\n    deleteModule = () => {\n        this.props.delete(this.props.idKey);\n        this.deleted = true;\n    }\n\n    saveModule = (data) => {\n        if (!this.deleted) {\n            localStorage.setItem(this.props.idKey, JSON.stringify({ type: this.state.type, ...data }));\n        }\n    }\n\n    setModuleType = (type) => {\n        // Create save\n        if (!this.props.data) localStorage.setItem(this.props.idKey, '');\n        let component;\n        switch (type) {\n            case 'CLOCK':\n                component = Clock;\n                break;\n            case 'NOTES':\n                component = Notes;\n                break;\n            default:\n                console.log('Unknown module type');\n        }\n\n        this.setState({\n            type: type\n        }, () => {\n            this.setState({\n                module: React.createElement(component, { idKey: this.props.idKey, data: this.props.data, ...this.state })\n            })\n        });\n    }\n\n    toggleSettingFace = (face) => {\n        this.setState({\n            settingFace: face\n        }, () => {\n            this.setState({\n                module: React.cloneElement(this.state.module, { ...this.state })\n            })\n        });\n    }\n}","import React, { Component } from 'react';\n\nimport Icon from '@mdi/react';\nimport { mdiPlus } from '@mdi/js';\n\nimport './App.css';\n\nimport Module from './components/Module';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modules: []\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.modules}\n        <Icon className=\"floating-button\" onClick={this.addModule} path={mdiPlus} size={2} color=\"white\" />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.loadModules();\n  }\n\n  loadModules = () => {\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      const value = JSON.parse(localStorage.getItem(key));\n      this.setState(prevState => ({\n        modules: [...prevState.modules, React.createElement(Module, { key: key, idKey: key, type: value.type, data: value.data, delete: this.deleteModule })]\n      }))\n    }\n  }\n\n  addModule = () => {\n    const newKey = this.generateKey();\n    this.setState(prevState => ({\n      modules: [...prevState.modules, React.createElement(Module, { key: newKey, idKey: newKey, delete: this.deleteModule })]\n    }))\n  }\n\n  deleteModule = (idToDelete) => {\n    this.setState(prevState => ({\n      modules: prevState.modules.filter(mod => mod.props.idKey !== idToDelete)\n    }));\n    localStorage.removeItem(idToDelete);\n  }\n\n  generateKey = () => {\n    let S4 = () => { return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1) };\n    return (S4() + S4());\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}